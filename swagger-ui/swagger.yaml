openapi: 3.0.3
info:
  title: Информационный портал - OpenAPI 3.0
  description: |-
    На этой странице описано backend-API информационного портала.

    Последнее изменение: 06.08.2023
    
    Некоторые полезные ссылки:
    - [Сайт информационного портала](http://77.222.60.117/)
    - [Репозиторий с исходным кодом сервера](https://github.com/Koffian/InfoPortal)
  version: 1.0.0
servers:
  - url: http://77.222.60.117/backend/
tags:
  - name: Посты
    description: Работа с постами
  - name: Пользователи
    description: Операции над учётными записями пользователей
paths:
  /admin/accounts:
    get:
      tags: 
        - Пользователи
      description: Получить список всех аккаунтов в системе
      responses:
        '200':
          description: Успешная операция
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        '400':
          description: Недостаточно доступа
        '403':
          description: Проблема авторизации
      security:
        - portalAuth: []
  /content/posts:
    get:
      tags:
        - Посты
      summary: Получить весь список постов
      description: Получить весь список постов
      responses:
        '200':
          description: Успешная операция
        '400':
          description: Недостаточно доступа
        '403':
          description: Проблема авторизации

components:
  schemas:
    User:
      type: object
      required:
        - username
        - password
        - access
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          description: Юзернейм пользователя портала. Используется для авторизации.
          example: administrator
        password:
          type: string
          description: Пароль пользователя (В БД хранится в захешированном виде)
          example: 1111 как дефолтный пароль
        access:
          type: integer
          description: Статус/уровень доступа пользователя (пользователь/админ/модератор/забанен)
          format: int32
          example: 0
        bannedUntil:
          type: string
          description: Дата, до которой действует бан на пользователя
          example: 2023-08-04T12:14:21.569+00:00
        mutedUntil:
          type: string
          description: Дата, до которой действует мут пользователя
          example: 2023-08-04T12:14:21.569+00:00
        subscribedTo:
          type: array
          items:
            properties:
              id: 
                type: number
                description: Идентификатор пользователя, на которого подписан текущий пользователя
        postCreatedList:
          type: array
          description: Массив идентификаторов созданных постов
          items:
            properties:
              id: 
                type: number
                description: Идентификатор созданного поста пользователем
      xml:
        name: user
    Post:
      description: Пост, написанный пользователем портала.
      type: object
      required:
        - title
        - type
        - format
        - createdBy
        - body
      properties:
        title:
          type: string
          description: Главный заголовок поста
          example: "Введение в создание постов"
        type:
          type: number
          description: Тип публикации (статья/новость) (по объёму содержимого)
          example: 2
        format:
          type: number
          description: Формат поста (характеристика по типу содержимого)
          example: "Digest, Roadmap, Research и т.д."
        createdBy:
          type: number
          description: Id автора
          example: 64cceb9e9e5d777f647732e9
        body:
          type: array
          description: "Массив элеменов, формирующих тело поста"
          items:
            properties:
              type:
                type: number
                description: "Тип элемента поста"
                example: "Заголовок, цитата, список, параграф, изображение и т.д."
              content:
                type: string
                description: "Тело элемента в виде строки(пока что)????"
                example: <iframe frameborder="0" width="400" height="200" src="http://commondatastorage.googleapis.com/codeskulptor-demos/DDR_assets/Sevish_-__nbsp_.mp3"> </iframe>
        creationDate:
          type: string
          description: Дата создания поста. Устанавливается автоматически системой.
          example: 2023-08-04T12:14:21.569+00:00
        modifyDate:
          type: string
          description: Дата последнего обновления поста. Устанавливается автоматически системой.
          example: 2023-08-04T12:14:21.569+00:00
        tags:
          type: array
          items:
            properties:
              id:
                type: number
                description: Id связанного тега
                example: 64cceb9e9e5d777f647732eb
        comments:
          type: array
          items:
            properties:
              id:
                type: number
                description: Id Комментариев
                example: 64cceb9e9e5d777f647732eb
        karmaCounter:
          type: number
          format: int64
          description: "Счётчик кармы (знаковое целое число)"
          default: 0
          example: -3
        isRestricted:
          type: boolean
          description: "Флаг бана поста (или ограничения на модерацию)"
          default: false
          example: true
    Tag:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Рабочее название тега
          example: "Веб-разработка"
        description:
          type: string
          description: Описание тега в двух словах
          example: "Всё, что относится к веб разработке"
      xml:
        name: tag
  requestBodies:
    UserArray:
      description: Массив пользователей
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    portalAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
